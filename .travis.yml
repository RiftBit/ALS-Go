language: go

sudo: true

os:
  - linux

services:
- mongodb

gobuild_args: --ldflags "-s -w -X \"main.version=$TRAVIS_TAG\" -X \"main.build=$(git rev-parse --short HEAD)\" -X \"main.buildDate=$(date --rfc-3339=seconds)\""

addons:
  apt:
    sources:
    - mongodb-3.2-precise
    packages:
    - mongodb-org-server

go:
  - 1.6.3
  - 1.7.3
  - tip

matrix:
  allow_failures:
    - go: tip
    - os: osx

#branches:
#  only:
#  - master
#  - develop
#  - /^v*.*.*$/

#env:
#  global:
#    - GOARCH=amd64

notifications:
  email:
    on_success: change
    on_failure: always

before_install:
  - go env && pwd

install:
 - go get -t ./...
 - go get -u github.com/stretchr/testify/assert
 - go get -u github.com/golang/lint/golint
 - go get -u golang.org/x/tools/cmd/goimports
 - go get -u golang.org/x/tools/cmd/cover
 - go get -u github.com/mattn/goveralls
 - go get -u github.com/erikstmartin/go-testdb
 - wget https://github.com/jgm/pandoc/releases/download/1.18/pandoc-1.18-1-amd64.deb && sudo dpkg -i pandoc-1.18-1-amd64.deb

before_script:
  - sleep 1

script:
 - go vet ./...
 - diff <(goimports -d .) <(printf "")
 - diff <(golint ./...) <(printf "")
 - go test -v -covermode=count -coverprofile=coverage.out
 - goveralls -coverprofile=coverage.out -service=travis-ci -repotoken $COVERALLS_TOKEN
# - go test -v -cpu=2 -short ./...
# - go test -v -cpu=1,2,4 -short ./...

#after_script:

#after_success:
#  - go env && pwd

#after_failure:
#  - go env && pwd


before_deploy:
  - 'echo "Deploing started"'
  - mkdir release
  - pandoc README.md -f markdown_github -t html -s -o README.html
  - cp config.smpl.yml config.yml
  - 'GOARCH=amd64 && GOOS=linux && go build -v --ldflags "-s -w -X \"main.version=$TRAVIS_TAG\" -X \"main.build=$(git rev-parse --short HEAD)\" -X \"main.buildDate=$(date --rfc-3339=seconds)\"" -o als-go; tar -zcvf release/als-go-linux-amd64.tar.gz als-go README.html config.yml'
  - 'GOARCH=386 &&   GOOS=linux && go build -v --ldflags "-s -w -X \"main.version=$TRAVIS_TAG\" -X \"main.build=$(git rev-parse --short HEAD)\" -X \"main.buildDate=$(date --rfc-3339=seconds)\"" -o als-go; tar -zcvf release/als-go-linux-i386.tar.gz als-go README.html config.yml'
  - 'GOARCH=arm &&   GOOS=linux && go build -v --ldflags "-s -w -X \"main.version=$TRAVIS_TAG\" -X \"main.build=$(git rev-parse --short HEAD)\" -X \"main.buildDate=$(date --rfc-3339=seconds)\"" -o als-go; tar -zcvf release/als-go-linux-arm.tar.gz als-go README.html config.yml'
  - 'GOARCH=arm64 && GOOS=linux && go build -v --ldflags "-s -w -X \"main.version=$TRAVIS_TAG\" -X \"main.build=$(git rev-parse --short HEAD)\" -X \"main.buildDate=$(date --rfc-3339=seconds)\"" -o als-go; tar -zcvf release/als-go-linux-arm64.tar.gz als-go README.html config.yml'
  - 'GOARCH=ppc64 && GOOS=linux && go build -v --ldflags "-s -w -X \"main.version=$TRAVIS_TAG\" -X \"main.build=$(git rev-parse --short HEAD)\" -X \"main.buildDate=$(date --rfc-3339=seconds)\"" -o als-go; tar -zcvf release/als-go-linux-ppc64.tar.gz als-go README.html config.yml'
  - 'GOARCH=s390x && GOOS=linux && go build -v --ldflags "-s -w -X \"main.version=$TRAVIS_TAG\" -X \"main.build=$(git rev-parse --short HEAD)\" -X \"main.buildDate=$(date --rfc-3339=seconds)\"" -o als-go; tar -zcvf release/als-go-linux-s390x.tar.gz als-go README.html config.yml'
  - 'GOARCH=amd64 && GOOS=freebsd && go build -v --ldflags "-s -w -X \"main.version=$TRAVIS_TAG\" -X \"main.build=$(git rev-parse --short HEAD)\" -X \"main.buildDate=$(date --rfc-3339=seconds)\"" -o als-go; tar -zcvf release/als-go-freebsd-amd64.tar.gz als-go README.html config.yml'
  - 'GOARCH=386 &&   GOOS=freebsd && go build -v --ldflags "-s -w -X \"main.version=$TRAVIS_TAG\" -X \"main.build=$(git rev-parse --short HEAD)\" -X \"main.buildDate=$(date --rfc-3339=seconds)\"" -o als-go; tar -zcvf release/als-go-freebsd-i386.tar.gz als-go README.html config.yml'
  - 'GOARCH=amd64 && GOOS=windows && go build -v --ldflags "-s -w -X \"main.version=$TRAVIS_TAG\" -X \"main.build=$(git rev-parse --short HEAD)\" -X \"main.buildDate=$(date --rfc-3339=seconds)\"" -o als-go.exe; zip release/als-go-windows-amd64.zip als-go.exe README.html config.yml'
  - 'GOARCH=386 &&   GOOS=windows && go build -v --ldflags "-s -w -X \"main.version=$TRAVIS_TAG\" -X \"main.build=$(git rev-parse --short HEAD)\" -X \"main.buildDate=$(date --rfc-3339=seconds)\"" -o als-go.exe; zip release/als-go-windows-i386.zip als-go.exe README.html config.yml'

deploy:
  - provider: releases
    skip_cleanup: true
    api_key: $GITHUB_OAUTH_TOKEN
    file:
      - "release/als-go-linux-i386.tar.gz"
      - "release/als-go-linux-amd64.tar.gz"
      - "release/als-go-linux-arm.tar.gz"
      - "release/als-go-linux-arm64.tar.gz"
      - "release/als-go-linux-ppc64.tar.gz"
      - "release/als-go-linux-s390x.tar.gz"
      - "release/als-go-freebsd-i386.tar.gz"
      - "release/als-go-freebsd-amd64.tar.gz"
      - "release/als-go-windows-i386.zip"
      - "release/als-go-windows-amd64.zip"
    on:
      repo: RiftBit/ALS-Go
      tags: true
      go: 1.7.3

after_deploy:
  - echo 'Deploing finished!'

#TRAVIS_GO_VERSION - The version of Go a job is using is available as: