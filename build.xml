<?xml version="1.0" encoding="UTF-8"?>
<project name="ALS-Go" default="build_all">

    <property environment="env"/>

    <target name="jenkins_build_all" depends="init, go-get-for-jenkins, go-build_linux_x64, build_windows_x64, copy_config, go-zip"/>

    <target name="build_all" depends="init, go-build_linux_x64, build_windows_x64, copy_config, go-zip"/>

    <target name="build_linux_x64" depends="init, go-build_linux_x64, copy_config, go-zip"/>
    <target name="build_windows_x64" depends="init, go-build_windows_x64, copy_config, go-zip"/>

    <target name="init" depends="clean, go-get"/>

    <target name="clean" description="Cleanup build artifacts">

        <delete>
            <fileset dir="${basedir}" includes="**/release-*.*"/>
        </delete>

        <delete failonerror="false" includeEmptyDirs="true">
            <fileset dir="${basedir}/out" />
        </delete>

    </target>


	<target name="go-get-for-jenkins">

		<exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/>
			<arg value="-u"/>
			<arg value="github.com/Riftbit/ALS-Go"/>
		</exec>

	</target>

    <target name="go-get-with-update">
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="-u"/>
			<arg value="github.com/Sirupsen/logrus"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="-u"/>
			<arg value="github.com/go-sql-driver/mysql"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="-u"/>
			<arg value="github.com/gorilla/rpc/v2"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="-u"/>
			<arg value="github.com/gorilla/rpc/v2/json2"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="-u"/>
			<arg value="github.com/jinzhu/gorm"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="-u"/>
			<arg value="github.com/jinzhu/inflection"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="-u"/>
			<arg value="github.com/patrickmn/go-cache"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="-u"/>
			<arg value="github.com/tmc/mgohacks"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="-u"/>
			<arg value="gopkg.in/mgo.v2"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="-u"/>
			<arg value="gopkg.in/validator.v2"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="-u"/>
			<arg value="gopkg.in/yaml.v2"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="-u"/>
			<arg value="github.com/stretchr/testify/assert"/>
		</exec>
		
    </target>
	
	
    <target name="go-get">
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="github.com/Sirupsen/logrus"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="github.com/go-sql-driver/mysql"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="github.com/gorilla/rpc/v2"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="github.com/gorilla/rpc/v2/json2"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="github.com/jinzhu/gorm"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="github.com/jinzhu/inflection"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="github.com/patrickmn/go-cache"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="github.com/tmc/mgohacks"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="gopkg.in/mgo.v2"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="gopkg.in/validator.v2"/>
		</exec>
	
        <exec dir="${basedir}" executable="go" failonerror="true" >
			<arg value="get"/> 
			<arg value="gopkg.in/yaml.v2"/>
		</exec>
		
    </target>

    <target name="go-build_windows_x64">
        <exec executable="go" failonerror="true" taskname="building go for win64">
            <env key="GOOS" value="windows"/>
            <env key="GOARCH" value="amd64"/>
            <arg value="build"/>
            <arg value="-v"/>
            <arg value="-o"/>
            <arg path="${basedir}/out/alsgo_windows_x64.exe"/>
        </exec>
    </target>


    <target name="go-build_linux_x64">
        <exec executable="go" failonerror="true" taskname="building go for linux64">
            <env key="GOOS" value="linux"/>
            <env key="GOARCH" value="amd64"/>
            <arg value="build"/>
            <arg value="-v"/>
            <arg value="-o"/>
            <arg path="${basedir}/out/alsgo_linux_x64"/>
        </exec>
    </target>

    <target name="copy_config">
        <copy file="${basedir}/config.smpl.yml" tofile="${basedir}/out/config.yml"/>
    </target>

    <target name="go-zip">
        <tar destfile="${basedir}/release.tar.gz" compression="gzip">
            <tarfileset dir="${basedir}/out" filemode="777">
                <include name="*"/>
            </tarfileset>
        </tar>
    </target>
</project>
