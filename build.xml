<?xml version="1.0" encoding="UTF-8"?>
<project name="Business.API" default="build_all">

    <property environment="env"/>

    <target name="build_all" depends="init, go-build_linux_x64, build_windows_x64, copy_config, go-zip, mail-build-info, show-build-info"/>

    <target name="build_linux_x64" depends="init, go-build_linux_x64, copy_config, go-zip, mail-build-info, show-build-info"/>
    <target name="build_windows_x64" depends="init, go-build_windows_x64, copy_config, go-zip, mail-build-info, show-build-info"/>

    <target name="init" depends="grab-build-info, clean, go-get"/>



    <target name="grab-build-info">
        <tstamp><format property="builtat" pattern="dd.MM.yyyy HH:mm:ss" timezone="Europe/Moscow"/></tstamp>
        <exec executable="whoami" outputproperty="whoami"/>
        <exec executable="uname" outputproperty="buildsystem"><arg value="-sin"/></exec>
        <exec executable="cat" outputproperty="version"><arg value="${basedir}/version"/></exec>
    </target>

    <target name="clean" description="Cleanup build artifacts">

        <delete>
            <fileset dir="${basedir}" includes="**/release-*.*"/>
        </delete>

        <delete failonerror="false" includeEmptyDirs="true">
            <fileset dir="${basedir}/out" />
        </delete>

        <delete failonerror="false" includeEmptyDirs="true">
            <fileset dir="${basedir}/src/*" />
        </delete>

        <delete failonerror="false" includeEmptyDirs="true">
            <fileset dir="${basedir}/pkg/*" />
        </delete>

    </target>

    <target name="go-get">
        <exec executable="go" failonerror="true" ><arg value="get"/> <arg value="-u"/> <arg value="github.com/gorilla/rpc/v2"/>
            <env key="GOPATH" path="${basedir}"/>
        </exec>
        <exec executable="go" failonerror="true" ><arg value="get"/> <arg value="-u"/> <arg value="github.com/gorilla/rpc/v2/json2"/>
            <env key="GOPATH" path="${basedir}"/>
        </exec>
        <exec executable="go" failonerror="true" ><arg value="get"/> <arg value="-u"/> <arg value="github.com/go-sql-driver/mysql"/>
            <env key="GOPATH" path="${basedir}"/>
        </exec>
        <exec executable="go" failonerror="true" ><arg value="get"/> <arg value="-u"/> <arg value="github.com/jinzhu/gorm"/>
            <env key="GOPATH" path="${basedir}"/>
        </exec>
        <exec executable="go" failonerror="true" ><arg value="get"/> <arg value="-u"/> <arg value="gopkg.in/yaml.v2"/>
            <env key="GOPATH" path="${basedir}"/>
        </exec>
        <exec executable="go" failonerror="true" ><arg value="get"/> <arg value="-u"/> <arg value="github.com/patrickmn/go-cache"/>
            <env key="GOPATH" path="${basedir}"/>
        </exec>
        <exec executable="go" failonerror="true" ><arg value="get"/> <arg value="-u"/> <arg value="gopkg.in/mgo.v2"/>
            <env key="GOPATH" path="${basedir}"/>
        </exec>
        <exec executable="go" failonerror="true" ><arg value="get"/> <arg value="-u"/> <arg value="gopkg.in/mgo.v2/bson"/>
            <env key="GOPATH" path="${basedir}"/>
        </exec>
        <exec executable="go" failonerror="true" ><arg value="get"/> <arg value="-u"/> <arg value="github.com/tmc/mgohacks"/>
            <env key="GOPATH" path="${basedir}"/>
        </exec>
        <exec executable="go" failonerror="true" ><arg value="get"/> <arg value="-u"/> <arg value="gopkg.in/validator.v2"/>
            <env key="GOPATH" path="${basedir}"/>
        </exec>
    </target>

    <target name="go-build_windows_x64">
        <exec executable="go" failonerror="true" taskname="building go for win64">
            <env key="GOPATH" path="${basedir}"/>
            <env key="GOOS" value="windows"/>
            <env key="GOARCH" value="amd64"/>
            <arg value="build"/>
            <!--<arg value="-v"/>-->
            <arg value="-o"/>
            <arg path="${basedir}/out/alsgo_windows_x64.exe"/>
        </exec>
    </target>


    <target name="go-build_linux_x64">
        <exec executable="go" failonerror="true" taskname="building go for linux64">
            <env key="GOPATH" path="${basedir}"/>
            <env key="GOOS" value="linux"/>
            <env key="GOARCH" value="amd64"/>
            <arg value="build"/>
            <!--<arg value="-v"/>-->
            <arg value="-o"/>
            <arg path="${basedir}/out/alsgo_linux_x64"/>
        </exec>
    </target>

    <target name="copy_config">
        <copy file="${basedir}/config.yml" tofile="${basedir}/out/config.yml"/>
    </target>

    <target name="go-zip">
        <exec executable="tar" failonerror="true" dir="${basedir}/out" taskname="ziping go binaries">
            <arg value="-czvf"/>
            <arg path="${basedir}/release-${version}.${env.BUILD_NUMBER}.tar.gz"/>
            <arg line="*"/>
        </exec>
    </target>

    <target name="mail-build-info">
        <mail tolist="SMorozov@mtt.ru" subject="Build Information" failonerror="false">
            <from address="jenkins@build.rnd.mtt"/>
            <message>
                #################################
                #           BUILD INFO          #
                #################################
                # Build Num:  ${env.BUILD_NUMBER}
                # Build Time: ${builtat}
                # Builder:    ${whoami}
                # Version:    ${version}
                # System:     ${buildsystem}
                #################################
            </message>
            <attachments>
                <fileset dir="${basedir}">
                    <include name="./release-${version}.${env.BUILD_NUMBER}-${builtat}.*"/>
                </fileset>
            </attachments>
        </mail>
    </target>

    <target name="show-build-info">
        <echo>
            #################################
            #           BUILD INFO          #
            #################################
            # Build Num:  ${env.BUILD_NUMBER}
            # Build Time: ${builtat}
            # Builder:    ${whoami}
            # Version:    ${version}
            # System:     ${buildsystem}
            #################################
        </echo>
    </target>
</project>
